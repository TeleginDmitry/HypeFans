{"version":3,"file":"static/js/916.80465cf9.chunk.js","mappings":"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","sources":["components/screens/Auth/Register/Register.tsx","pages/RegisterPage.tsx"],"sourcesContent":["import React, {  } from 'react'\r\nimport styles from './Registr.module.scss'\r\nimport stylesAuth from '../Auth.module.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport { useFormik } from 'formik'\r\nimport logo from '@assets/images/auth/logoBlack.png'\r\nimport { emailRegex } from 'shared/regex'\r\nimport useActions from 'hooks/useActions'\r\nimport OtherEntrance from '../OtherEntrance/OtherEntrance'\r\nimport ValidateField from 'components/shared/validateField/ValidateField'\r\nimport { Button, Input } from 'ui-hypefans-lib'\r\n\r\ninterface IInitialValues {\r\n\tusername: string\r\n\temail: string\r\n\tpassword: string\r\n}\r\n\r\nconst initialValues: IInitialValues = {\r\n\temail: '',\r\n\tusername: '',\r\n\tpassword: '',\r\n}\r\n\r\nconst validate = (values: IInitialValues) => {\r\n\tconst errors: Partial<IInitialValues> = {}\r\n\r\n\tif (!values.username) {\r\n\t\terrors.username = 'Это поле обязательно для заполнения'\r\n\t}\r\n\r\n\tif (!values.email) {\r\n\t\terrors.email = 'Это поле обязательно для заполнения'\r\n\t} else if (!emailRegex.test(values.email)) {\r\n\t\terrors.email = 'Неверный формат эл.почты'\r\n\t}\r\n\r\n\tif (!values.password) {\r\n\t\terrors.password = 'Это поле обязательно для заполнения'\r\n\t} else if (values.password.length < 5) {\r\n\t\terrors.password = 'Пароль не должен быть меньше 5 символов'\r\n\t}\r\n\r\n\treturn errors\r\n}\r\n\r\nexport default function Register() {\r\n\tconst { register } = useActions()\r\n\r\n\tconst formik = useFormik<IInitialValues>({\r\n\t\tinitialValues,\r\n\t\tvalidate,\r\n\t\tonSubmit: onSubmitFunction,\r\n\t})\r\n\r\n\tasync function onSubmitFunction(values: IInitialValues) {\r\n\t\tawait register(values)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={stylesAuth.wrapper}>\r\n\t\t\t<div className={stylesAuth.titles}>\r\n\t\t\t\t<h1 className={stylesAuth.title}>Регистрация</h1>\r\n\t\t\t\t<p className={stylesAuth.question}>\r\n\t\t\t\t\tУже есть аккаунт?{' '}\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tto='/login'\r\n\t\t\t\t\t\treplace={false}\r\n\t\t\t\t\t\tclassName={stylesAuth.question__style}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tВойдите\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<div className={stylesAuth.form__container_logo}>\r\n\t\t\t\t<img className={stylesAuth.form__logo} src={logo} alt='HypeFans' />\r\n\t\t\t</div>\r\n\t\t\t<form className={stylesAuth.form} onSubmit={formik.handleSubmit}>\r\n\t\t\t\t<div className={stylesAuth.form__wrapper}>\r\n\t\t\t\t\t<div className={stylesAuth.form__input_content}>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tid='email'\r\n\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\tplaceholder='Введите свой email...'\r\n\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\tlabelClassName={stylesAuth.form__text}\r\n\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\tisWrong={!!formik.errors.email && !!formik.touched.email}\r\n\t\t\t\t\t\t\t{...formik.getFieldProps('email')}\r\n\t\t\t\t\t\t></Input>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className={stylesAuth.form__input_content}>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tid='password'\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tplaceholder='Введите свой пароль...'\r\n\t\t\t\t\t\t\tlabel='Пароль'\r\n\t\t\t\t\t\t\tlabelClassName={stylesAuth.form__text}\r\n\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\tisWrong={!!formik.errors.password && !!formik.touched.password}\r\n\t\t\t\t\t\t\t{...formik.getFieldProps('password')}\r\n\t\t\t\t\t\t></Input>\r\n\t\t\t\t\t\t<ValidateField\r\n\t\t\t\t\t\t\tisTouched={formik.touched.password}\r\n\t\t\t\t\t\t\terror={formik.errors.password}\r\n\t\t\t\t\t\t></ValidateField>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={stylesAuth.form__input_content}>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tid='username'\r\n\t\t\t\t\t\t\ttype='username'\r\n\t\t\t\t\t\t\tplaceholder='Введите своё имя...'\r\n\t\t\t\t\t\t\tlabel='Имя'\r\n\t\t\t\t\t\t\tlabelClassName={stylesAuth.form__text}\r\n\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\tisWrong={!!formik.errors.username && !!formik.touched.username}\r\n\t\t\t\t\t\t\t{...formik.getFieldProps('username')}\r\n\t\t\t\t\t\t></Input>\r\n\t\t\t\t\t\t<ValidateField\r\n\t\t\t\t\t\t\tisTouched={formik.touched.username}\r\n\t\t\t\t\t\t\terror={formik.errors.username}\r\n\t\t\t\t\t\t></ValidateField>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className={stylesAuth.button__container}>\r\n\t\t\t\t\t\t<Button>Создать</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t\t<div className={stylesAuth.other}>\r\n\t\t\t\t<OtherEntrance />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport Register from '../components/screens/Auth/Register/Register'\r\n\r\nexport default function RegisterPage() {\r\n  return (\r\n    <Register></Register>\r\n  )\r\n}\r\n"],"names":["initialValues","email","username","password","validate","values","errors","emailRegex","length","Register","register","useActions","formik","useFormik","onSubmit","_x","_onSubmitFunction","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","_jsxs","className","stylesAuth","children","_jsx","Link","to","replace","src","logo","alt","handleSubmit","Input","_objectSpread","id","type","placeholder","label","labelClassName","onChange","handleChange","isWrong","touched","getFieldProps","ValidateField","isTouched","error","Button","OtherEntrance","RegisterPage"],"sourceRoot":""}